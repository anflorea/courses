%{
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include "y.tab.h"
%}

%option noyywrap
DIGIT     [0-9]
ID_FIRST  [a-zA-Z]
ID_END    [a-zA-Z0-9_]

%%
{DIGIT}+              yylval.integer = atoi(yytext); return INTEGER;
{DIGIT}+"."{DIGIT}*   yylval.real = atof(yytext); return REAL;

int                   return INT;
char                  return CHAR;
float                 return FLOAT;
cin                   return CIN;
cout                  return COUT;
if                    return IF;
else                  return ELSE;
while                 return WHILE;
main                  return MAIN;
\{                    return OBRACE;
\}                    return EBRACE;
\;                    return SEMICOLON;
\(                    return OPAR;
\)                    return EPAR;
\+                    return PLUS;
\-                    return MINUS;
\*                    return MULT;
\/                    return DIV;
\%                    return MOD;
\>                    return GT;
\<                    return LT;
\>=                   return GE;
\<=                   return LE;
\==                   return EQ;
\!=                   return NOTEQ;
\=                    return ASSIGN;
return                return RETURN;
{ID_FIRST}{ID_END}*   yylval.text = strdup(yytext); return ID;

[ \t\n]+              /* ignore end of line and whitespace */
. {
  if(yytext[0] != 13){
  printf("Illegal token %s!\n",yytext);
  }
}
%%
int main_lex (argc,argv)
int argc;
char **argv;
{
  ++argv;--argc;
  if( argc > 0) {
    yyin = fopen(argv[0],"r");
  }
  return 0;
}
