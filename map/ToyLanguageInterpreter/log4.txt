ExeStack: 
	openRFile(var_f,test.in)
	(readFile(var_f,var_c);(print(var_c );(IF(var_c ) THEN(print(var_c ))ELSE(print(0 ));closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


ExeStack: 
	(readFile(var_f,var_c);(print(var_c );(IF(var_c ) THEN(print(var_c ))ELSE(print(0 ));closeRFile(var_f))))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


ExeStack: 
	readFile(var_f,var_c)
	(print(var_c );(IF(var_c ) THEN(print(var_c ))ELSE(print(0 ));closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


ExeStack: 
	(print(var_c );(IF(var_c ) THEN(print(var_c ))ELSE(print(0 ));closeRFile(var_f)))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


ExeStack: 
	print(var_c )
	(IF(var_c ) THEN(print(var_c ))ELSE(print(0 ));closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


ExeStack: 
	(IF(var_c ) THEN(print(var_c ))ELSE(print(0 ));closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


ExeStack: 
	IF(var_c ) THEN(print(var_c ))ELSE(print(0 ))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


ExeStack: 
	print(var_c )
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


ExeStack: 
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


ExeStack: 
	openRFile(var_f,test.in)
	(readFile(var_f,var_c);(print(var_c );(IF(var_c ) THEN(print(var_c ))ELSE(print(0 ));closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


ExeStack: 
	(readFile(var_f,var_c);(print(var_c );(IF(var_c ) THEN(print(var_c ))ELSE(print(0 ));closeRFile(var_f))))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


ExeStack: 
	readFile(var_f,var_c)
	(print(var_c );(IF(var_c ) THEN(print(var_c ))ELSE(print(0 ));closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


ExeStack: 
	(print(var_c );(IF(var_c ) THEN(print(var_c ))ELSE(print(0 ));closeRFile(var_f)))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


ExeStack: 
	print(var_c )
	(IF(var_c ) THEN(print(var_c ))ELSE(print(0 ));closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


ExeStack: 
	(IF(var_c ) THEN(print(var_c ))ELSE(print(0 ));closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


ExeStack: 
	IF(var_c ) THEN(print(var_c ))ELSE(print(0 ))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


ExeStack: 
	print(var_c )
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


ExeStack: 
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


ExeStack: 
	openRFile(var_f,test.in)
	(readFile(var_f,var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


ExeStack: 
	(readFile(var_f,var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


ExeStack: 
	readFile(var_f,var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


ExeStack: 
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


ExeStack: 
	print(var_c)
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


ExeStack: 
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


ExeStack: 
	print(var_c)
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


ExeStack: 
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


ExeStack: 
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


ExeStack: 
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


ExeStack: 
	print(var_c)
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


ExeStack: 
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


ExeStack: 
	print(var_c)
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


ExeStack: 
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(openRFile(var_f, test.in); (readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(openRFile(var_f, test.in); (readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(openRFile(var_f, test.in); (readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, var_c)
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f))


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (var_c) THEN (print(var_c)) ELSE (print(0))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(var_c)
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	closeRFile(var_f)


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
var_c-->2


Output: 
2
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(openRFile(var_f, test.in); (readFile(var_f, var_c); (print(var_c); (IF (var_c) THEN (print(var_c)) ELSE (print(0)); closeRFile(var_f)))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



