ExeStack: 
	a=2 -2  
	(IF(a ) THEN(v=2 )ELSE(v=3 );print(v ))


SymbolTable: 


Output: 


FileTable: 


ExeStack: 
	(IF(a ) THEN(v=2 )ELSE(v=3 );print(v ))


SymbolTable: 
a-->0


Output: 


FileTable: 


ExeStack: 
	IF(a ) THEN(v=2 )ELSE(v=3 )
	print(v )


SymbolTable: 
a-->0


Output: 


FileTable: 


ExeStack: 
	v=3 
	print(v )


SymbolTable: 
a-->0


Output: 


FileTable: 


ExeStack: 
	print(v )


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 
3


FileTable: 


ExeStack: 
	a=2 -2  
	(IF(a ) THEN(v=2 )ELSE(v=3 );print(v ))


SymbolTable: 


Output: 


FileTable: 


ExeStack: 
	(IF(a ) THEN(v=2 )ELSE(v=3 );print(v ))


SymbolTable: 
a-->0


Output: 


FileTable: 


ExeStack: 
	IF(a ) THEN(v=2 )ELSE(v=3 )
	print(v )


SymbolTable: 
a-->0


Output: 


FileTable: 


ExeStack: 
	v=3 
	print(v )


SymbolTable: 
a-->0


Output: 


FileTable: 


ExeStack: 
	print(v )


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 
3


FileTable: 


ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 
3


FileTable: 


ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 
3


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 
3


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 
3


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 
3


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 
3


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 
3


FileTable: 


Heap: 



ExeStack: 
	(a = 2 - 2; (IF (a) THEN (v = 2) ELSE (v = 3); print(v)))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 
	(a = 2 - 2; (IF (a) THEN (v = 2) ELSE (v = 3); print(v)))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 
3


FileTable: 


Heap: 



ExeStack: 
	(a = 2 - 2; (IF (a) THEN (v = 2) ELSE (v = 3); print(v)))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 
3


FileTable: 


Heap: 



ExeStack: 
	(a = 2 - 2; (IF (a) THEN (v = 2) ELSE (v = 3); print(v)))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 
3


FileTable: 


Heap: 



ExeStack: 
	(a = 2 - 2; (IF (a) THEN (v = 2) ELSE (v = 3); print(v)))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 
3


FileTable: 


Heap: 



ExeStack: 
	(a = 2 - 2; (IF (a) THEN (v = 2) ELSE (v = 3); print(v)))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 
3


FileTable: 


Heap: 



ExeStack: 
	(a = 2 - 2; (IF (a) THEN (v = 2) ELSE (v = 3); print(v)))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	a = 2 - 2
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	(IF (a) THEN (v = 2) ELSE (v = 3); print(v))


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	IF (a) THEN (v = 2) ELSE (v = 3)
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 3
	print(v)


SymbolTable: 
a-->0


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
a-->0
v-->3


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
a-->0
v-->3


Output: 
3


FileTable: 


Heap: 



