ExeStack: 
	v=2 
	print(v )


SymbolTable: 


Output: 


FileTable: 


ExeStack: 
	print(v )


SymbolTable: 
v-->2


Output: 


FileTable: 


ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


ExeStack: 
	v=2 
	print(v )


SymbolTable: 


Output: 


FileTable: 


ExeStack: 
	print(v )


SymbolTable: 
v-->2


Output: 


FileTable: 


ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


ExeStack: 
	v = 2 
	print(v )


SymbolTable: 


Output: 


FileTable: 


ExeStack: 
	print(v )


SymbolTable: 
v-->2


Output: 


FileTable: 


ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 
4-->test.in


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 
4-->test.in


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 
4-->test.in


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 
4-->test.in


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 
4-->test.in


Heap: 



ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 
4-->test.in


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(openRFile(var_f, test.in); (readFile(var_f, c); (d = c * 5; (IF (c) THEN (print(c)) ELSE (print(d)); closeRFile(var_f)))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, c); (d = c * 5; (IF (c) THEN (print(c)) ELSE (print(d)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	openRFile(var_f, test.in)
	(readFile(var_f, c); (d = c * 5; (IF (c) THEN (print(c)) ELSE (print(d)); closeRFile(var_f))))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(readFile(var_f, c); (d = c * 5; (IF (c) THEN (print(c)) ELSE (print(d)); closeRFile(var_f))))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(readFile(var_f, c); (d = c * 5; (IF (c) THEN (print(c)) ELSE (print(d)); closeRFile(var_f))))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, c)
	(d = c * 5; (IF (c) THEN (print(c)) ELSE (print(d)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	readFile(var_f, c)
	(d = c * 5; (IF (c) THEN (print(c)) ELSE (print(d)); closeRFile(var_f)))


SymbolTable: 
var_f-->3


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(d = c * 5; (IF (c) THEN (print(c)) ELSE (print(d)); closeRFile(var_f)))


SymbolTable: 
var_f-->3
c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(d = c * 5; (IF (c) THEN (print(c)) ELSE (print(d)); closeRFile(var_f)))


SymbolTable: 
var_f-->3
c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	d = c * 5
	(IF (c) THEN (print(c)) ELSE (print(d)); closeRFile(var_f))


SymbolTable: 
var_f-->3
c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	d = c * 5
	(IF (c) THEN (print(c)) ELSE (print(d)); closeRFile(var_f))


SymbolTable: 
var_f-->3
c-->2


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(IF (c) THEN (print(c)) ELSE (print(d)); closeRFile(var_f))


SymbolTable: 
var_f-->3
c-->2
d-->10


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(IF (c) THEN (print(c)) ELSE (print(d)); closeRFile(var_f))


SymbolTable: 
var_f-->3
c-->2
d-->10


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (c) THEN (print(c)) ELSE (print(d))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
c-->2
d-->10


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	IF (c) THEN (print(c)) ELSE (print(d))
	closeRFile(var_f)


SymbolTable: 
var_f-->3
c-->2
d-->10


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(c)
	closeRFile(var_f)


SymbolTable: 
var_f-->3
c-->2
d-->10


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	print(c)
	closeRFile(var_f)


SymbolTable: 
var_f-->3
c-->2
d-->10


Output: 


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	closeRFile(var_f)


SymbolTable: 
var_f-->3
c-->2
d-->10


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	closeRFile(var_f)


SymbolTable: 
var_f-->3
c-->2
d-->10


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 


SymbolTable: 
var_f-->3
c-->2
d-->10


Output: 
2


FileTable: 
3-->test.in


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


Heap: 



ExeStack: 
	(v = 2; print(v))


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	v = 2
	print(v)


SymbolTable: 


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 
	print(v)


SymbolTable: 
v-->2


Output: 


FileTable: 


Heap: 



ExeStack: 


SymbolTable: 
v-->2


Output: 
2


FileTable: 


Heap: 



